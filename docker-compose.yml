version: "3.9"
services:
  app:
    build:
      dockerfile: Dockerfile
      context: .
      target: dev # This is the same dev that is in our Dockerfile stages
    volumes:
      - .:/opt/app/api
    environment:
      API_SERVER_ADDR: ":3000"
      DATABASE_URL: postgres://local-dev@db/api?sslmode=disable
    ports:
      - "3000:3000" # address we want to listen on as well as a port exposure
    # Lastly, let's link up our app container to our db container by adding this to our services.app
    links:
      - db

  db:
    image: postgres:16.1-alpine
    volumes:
      - data:/var/lib/postgresql/data # this is referencing a volume that we need to add to our compose config
      #  it instructs docker compose to create a volume called data. We use this created volume to store our database data into, so when we stop our containers, the information created isn't lost.
    environment:
      POSTGRES_DB: api
      POSTGRES_USER: local-dev
      POSTGRES_HOST_AUTH_METHOD: trust # portion removes the need for a password to connect

  migrate: &basemigrate
    profiles: [ "tools" ]
    image: migrate/migrate
    entrypoint: "migrate -database postgresql://local-dev@db/api?sslmode=disable -path /tmp/migrations"
    command: up
    links:
      - db
    volumes:
      - ./migrations:/tmp/migrations

  create-migration:
    <<: *basemigrate
    entrypoint: migrate create -dir /tmp/migrations -ext sql
    command: ""

volumes:
  data:
